name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        working-directory: ./cmd
        run: |
          if [ "$GOOS" = "windows" ]; then
            executable_name="netool.exe"
          else
            executable_name="netool"
          fi
          go build -v -o $executable_name ./main
          tar -czvf netool-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz $executable_name
          rm $executable_name

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: netool-${{ matrix.goos }}-${{ matrix.goarch }}
          path: cmd/netool-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: List artifacts
        run: ls -l ./artifacts

      - name: Move files to artifacts directory
        run: |
          find ./artifacts -mindepth 2 -type f -exec mv {} ./artifacts/ \;
          find ./artifacts -type d -empty -delete

      - name: List artifacts
        run: ls -l ./artifacts

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          artifacts: ./artifacts/*
          token: ${{ secrets.GITHUB_TOKEN }}
