// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.22.3
// source: proto/example.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 枚举类型示例
type Status int32

const (
	Status_UNKNOWN  Status = 0
	Status_ACTIVE   Status = 1
	Status_INACTIVE Status = 2
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "UNKNOWN",
		1: "ACTIVE",
		2: "INACTIVE",
	}
	Status_value = map[string]int32{
		"UNKNOWN":  0,
		"ACTIVE":   1,
		"INACTIVE": 2,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_example_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_proto_example_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_proto_example_proto_rawDescGZIP(), []int{0}
}

// 主消息类型示例
type AllTypes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 基础类型字段
	FieldInt32    int32   `protobuf:"varint,1,opt,name=field_int32,json=fieldInt32,proto3" json:"field_int32,omitempty"`
	FieldInt64    int64   `protobuf:"varint,2,opt,name=field_int64,json=fieldInt64,proto3" json:"field_int64,omitempty"`
	FieldUint32   uint32  `protobuf:"varint,3,opt,name=field_uint32,json=fieldUint32,proto3" json:"field_uint32,omitempty"`
	FieldUint64   uint64  `protobuf:"varint,4,opt,name=field_uint64,json=fieldUint64,proto3" json:"field_uint64,omitempty"`
	FieldSint32   int32   `protobuf:"zigzag32,5,opt,name=field_sint32,json=fieldSint32,proto3" json:"field_sint32,omitempty"`
	FieldSint64   int64   `protobuf:"zigzag64,6,opt,name=field_sint64,json=fieldSint64,proto3" json:"field_sint64,omitempty"`
	FieldFixed32  uint32  `protobuf:"fixed32,7,opt,name=field_fixed32,json=fieldFixed32,proto3" json:"field_fixed32,omitempty"`
	FieldFixed64  uint64  `protobuf:"fixed64,8,opt,name=field_fixed64,json=fieldFixed64,proto3" json:"field_fixed64,omitempty"`
	FieldSfixed32 int32   `protobuf:"fixed32,9,opt,name=field_sfixed32,json=fieldSfixed32,proto3" json:"field_sfixed32,omitempty"`
	FieldSfixed64 int64   `protobuf:"fixed64,10,opt,name=field_sfixed64,json=fieldSfixed64,proto3" json:"field_sfixed64,omitempty"`
	FieldFloat    float32 `protobuf:"fixed32,11,opt,name=field_float,json=fieldFloat,proto3" json:"field_float,omitempty"`
	FieldDouble   float64 `protobuf:"fixed64,12,opt,name=field_double,json=fieldDouble,proto3" json:"field_double,omitempty"`
	FieldBool     bool    `protobuf:"varint,13,opt,name=field_bool,json=fieldBool,proto3" json:"field_bool,omitempty"`
	FieldString   string  `protobuf:"bytes,14,opt,name=field_string,json=fieldString,proto3" json:"field_string,omitempty"`
	FieldBytes    []byte  `protobuf:"bytes,15,opt,name=field_bytes,json=fieldBytes,proto3" json:"field_bytes,omitempty"`
	// 复合类型字段
	FieldEnum          Status                  `protobuf:"varint,16,opt,name=field_enum,json=fieldEnum,proto3,enum=proto.Status" json:"field_enum,omitempty"` // 枚举类型
	FieldNestedMessage *AllTypes_NestedMessage `protobuf:"bytes,17,opt,name=field_nested_message,json=fieldNestedMessage,proto3" json:"field_nested_message,omitempty"`
	// Repeated 字段（数组/列表）
	FieldRepeatedInt32  []int32  `protobuf:"varint,18,rep,packed,name=field_repeated_int32,json=fieldRepeatedInt32,proto3" json:"field_repeated_int32,omitempty"`
	FieldRepeatedString []string `protobuf:"bytes,19,rep,name=field_repeated_string,json=fieldRepeatedString,proto3" json:"field_repeated_string,omitempty"`
	// Map 字段
	FieldMap map[string]int32 `protobuf:"bytes,20,rep,name=field_map,json=fieldMap,proto3" json:"field_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// Oneof 字段示例
	//
	// Types that are assignable to OptionalValue:
	//
	//	*AllTypes_OptInt32
	//	*AllTypes_OptString
	//	*AllTypes_OptNestedMessage
	OptionalValue isAllTypes_OptionalValue `protobuf_oneof:"optional_value"`
}

func (x *AllTypes) Reset() {
	*x = AllTypes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_example_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllTypes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllTypes) ProtoMessage() {}

func (x *AllTypes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_example_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllTypes.ProtoReflect.Descriptor instead.
func (*AllTypes) Descriptor() ([]byte, []int) {
	return file_proto_example_proto_rawDescGZIP(), []int{0}
}

func (x *AllTypes) GetFieldInt32() int32 {
	if x != nil {
		return x.FieldInt32
	}
	return 0
}

func (x *AllTypes) GetFieldInt64() int64 {
	if x != nil {
		return x.FieldInt64
	}
	return 0
}

func (x *AllTypes) GetFieldUint32() uint32 {
	if x != nil {
		return x.FieldUint32
	}
	return 0
}

func (x *AllTypes) GetFieldUint64() uint64 {
	if x != nil {
		return x.FieldUint64
	}
	return 0
}

func (x *AllTypes) GetFieldSint32() int32 {
	if x != nil {
		return x.FieldSint32
	}
	return 0
}

func (x *AllTypes) GetFieldSint64() int64 {
	if x != nil {
		return x.FieldSint64
	}
	return 0
}

func (x *AllTypes) GetFieldFixed32() uint32 {
	if x != nil {
		return x.FieldFixed32
	}
	return 0
}

func (x *AllTypes) GetFieldFixed64() uint64 {
	if x != nil {
		return x.FieldFixed64
	}
	return 0
}

func (x *AllTypes) GetFieldSfixed32() int32 {
	if x != nil {
		return x.FieldSfixed32
	}
	return 0
}

func (x *AllTypes) GetFieldSfixed64() int64 {
	if x != nil {
		return x.FieldSfixed64
	}
	return 0
}

func (x *AllTypes) GetFieldFloat() float32 {
	if x != nil {
		return x.FieldFloat
	}
	return 0
}

func (x *AllTypes) GetFieldDouble() float64 {
	if x != nil {
		return x.FieldDouble
	}
	return 0
}

func (x *AllTypes) GetFieldBool() bool {
	if x != nil {
		return x.FieldBool
	}
	return false
}

func (x *AllTypes) GetFieldString() string {
	if x != nil {
		return x.FieldString
	}
	return ""
}

func (x *AllTypes) GetFieldBytes() []byte {
	if x != nil {
		return x.FieldBytes
	}
	return nil
}

func (x *AllTypes) GetFieldEnum() Status {
	if x != nil {
		return x.FieldEnum
	}
	return Status_UNKNOWN
}

func (x *AllTypes) GetFieldNestedMessage() *AllTypes_NestedMessage {
	if x != nil {
		return x.FieldNestedMessage
	}
	return nil
}

func (x *AllTypes) GetFieldRepeatedInt32() []int32 {
	if x != nil {
		return x.FieldRepeatedInt32
	}
	return nil
}

func (x *AllTypes) GetFieldRepeatedString() []string {
	if x != nil {
		return x.FieldRepeatedString
	}
	return nil
}

func (x *AllTypes) GetFieldMap() map[string]int32 {
	if x != nil {
		return x.FieldMap
	}
	return nil
}

func (m *AllTypes) GetOptionalValue() isAllTypes_OptionalValue {
	if m != nil {
		return m.OptionalValue
	}
	return nil
}

func (x *AllTypes) GetOptInt32() int32 {
	if x, ok := x.GetOptionalValue().(*AllTypes_OptInt32); ok {
		return x.OptInt32
	}
	return 0
}

func (x *AllTypes) GetOptString() string {
	if x, ok := x.GetOptionalValue().(*AllTypes_OptString); ok {
		return x.OptString
	}
	return ""
}

func (x *AllTypes) GetOptNestedMessage() *AllTypes_NestedMessage {
	if x, ok := x.GetOptionalValue().(*AllTypes_OptNestedMessage); ok {
		return x.OptNestedMessage
	}
	return nil
}

type isAllTypes_OptionalValue interface {
	isAllTypes_OptionalValue()
}

type AllTypes_OptInt32 struct {
	OptInt32 int32 `protobuf:"varint,21,opt,name=opt_int32,json=optInt32,proto3,oneof"`
}

type AllTypes_OptString struct {
	OptString string `protobuf:"bytes,22,opt,name=opt_string,json=optString,proto3,oneof"`
}

type AllTypes_OptNestedMessage struct {
	OptNestedMessage *AllTypes_NestedMessage `protobuf:"bytes,23,opt,name=opt_nested_message,json=optNestedMessage,proto3,oneof"`
}

func (*AllTypes_OptInt32) isAllTypes_OptionalValue() {}

func (*AllTypes_OptString) isAllTypes_OptionalValue() {}

func (*AllTypes_OptNestedMessage) isAllTypes_OptionalValue() {}

// 嵌套消息类型
type AllTypes_NestedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NestedField string `protobuf:"bytes,1,opt,name=nested_field,json=nestedField,proto3" json:"nested_field,omitempty"`
	NestedValue int32  `protobuf:"varint,2,opt,name=nested_value,json=nestedValue,proto3" json:"nested_value,omitempty"`
}

func (x *AllTypes_NestedMessage) Reset() {
	*x = AllTypes_NestedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_example_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllTypes_NestedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllTypes_NestedMessage) ProtoMessage() {}

func (x *AllTypes_NestedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_example_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllTypes_NestedMessage.ProtoReflect.Descriptor instead.
func (*AllTypes_NestedMessage) Descriptor() ([]byte, []int) {
	return file_proto_example_proto_rawDescGZIP(), []int{0, 0}
}

func (x *AllTypes_NestedMessage) GetNestedField() string {
	if x != nil {
		return x.NestedField
	}
	return ""
}

func (x *AllTypes_NestedMessage) GetNestedValue() int32 {
	if x != nil {
		return x.NestedValue
	}
	return 0
}

var File_proto_example_proto protoreflect.FileDescriptor

var file_proto_example_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xed, 0x08, 0x0a,
	0x08, 0x41, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x5f, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x21, 0x0a, 0x0c, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x21,
	0x0a, 0x0c, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x55, 0x69, 0x6e, 0x74, 0x36,
	0x34, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x73, 0x69, 0x6e, 0x74, 0x33,
	0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x11, 0x52, 0x0b, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x69,
	0x6e, 0x74, 0x33, 0x32, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x73, 0x69,
	0x6e, 0x74, 0x36, 0x34, 0x18, 0x06, 0x20, 0x01, 0x28, 0x12, 0x52, 0x0b, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x53, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x5f, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x18, 0x07, 0x20, 0x01, 0x28, 0x07, 0x52, 0x0c,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x46, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x12, 0x23, 0x0a, 0x0d,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x06, 0x52, 0x0c, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x46, 0x69, 0x78, 0x65, 0x64, 0x36,
	0x34, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x73, 0x66, 0x69, 0x78, 0x65,
	0x64, 0x33, 0x32, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0f, 0x52, 0x0d, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x53, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x5f, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x10,
	0x52, 0x0d, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x12,
	0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x46, 0x6c, 0x6f, 0x61, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x44, 0x6f, 0x75,
	0x62, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x6f, 0x6f,
	0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x42, 0x6f,
	0x6f, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f,
	0x65, 0x6e, 0x75, 0x6d, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x45, 0x6e, 0x75, 0x6d, 0x12, 0x4f, 0x0a, 0x14, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6c, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x12, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x72,
	0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x12, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x12, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x32, 0x0a, 0x15, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x5f, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x18, 0x13, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x65, 0x70,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x3a, 0x0a, 0x09, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x70, 0x12, 0x1d, 0x0a, 0x09, 0x6f, 0x70, 0x74, 0x5f, 0x69,
	0x6e, 0x74, 0x33, 0x32, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x08, 0x6f, 0x70,
	0x74, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x1f, 0x0a, 0x0a, 0x6f, 0x70, 0x74, 0x5f, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x6f, 0x70,
	0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x4d, 0x0a, 0x12, 0x6f, 0x70, 0x74, 0x5f, 0x6e,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6c, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x48, 0x00, 0x52, 0x10, 0x6f, 0x70, 0x74, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x55, 0x0a, 0x0d, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x3b, 0x0a,
	0x0d, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2a, 0x2f, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12,
	0x0c, 0x0a, 0x08, 0x49, 0x4e, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x02, 0x42, 0x2a, 0x5a,
	0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x79, 0x73, 0x75,
	0x67, 0x61, 0x72, 0x2f, 0x77, 0x68, 0x65, 0x65, 0x6c, 0x73, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_proto_example_proto_rawDescOnce sync.Once
	file_proto_example_proto_rawDescData = file_proto_example_proto_rawDesc
)

func file_proto_example_proto_rawDescGZIP() []byte {
	file_proto_example_proto_rawDescOnce.Do(func() {
		file_proto_example_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_example_proto_rawDescData)
	})
	return file_proto_example_proto_rawDescData
}

var file_proto_example_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_example_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_example_proto_goTypes = []any{
	(Status)(0),                    // 0: proto.Status
	(*AllTypes)(nil),               // 1: proto.AllTypes
	(*AllTypes_NestedMessage)(nil), // 2: proto.AllTypes.NestedMessage
	nil,                            // 3: proto.AllTypes.FieldMapEntry
}
var file_proto_example_proto_depIdxs = []int32{
	0, // 0: proto.AllTypes.field_enum:type_name -> proto.Status
	2, // 1: proto.AllTypes.field_nested_message:type_name -> proto.AllTypes.NestedMessage
	3, // 2: proto.AllTypes.field_map:type_name -> proto.AllTypes.FieldMapEntry
	2, // 3: proto.AllTypes.opt_nested_message:type_name -> proto.AllTypes.NestedMessage
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_example_proto_init() }
func file_proto_example_proto_init() {
	if File_proto_example_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_example_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*AllTypes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_example_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*AllTypes_NestedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_example_proto_msgTypes[0].OneofWrappers = []any{
		(*AllTypes_OptInt32)(nil),
		(*AllTypes_OptString)(nil),
		(*AllTypes_OptNestedMessage)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_example_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_example_proto_goTypes,
		DependencyIndexes: file_proto_example_proto_depIdxs,
		EnumInfos:         file_proto_example_proto_enumTypes,
		MessageInfos:      file_proto_example_proto_msgTypes,
	}.Build()
	File_proto_example_proto = out.File
	file_proto_example_proto_rawDesc = nil
	file_proto_example_proto_goTypes = nil
	file_proto_example_proto_depIdxs = nil
}
